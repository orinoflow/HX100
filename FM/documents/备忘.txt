重要差异备忘：

处理流程：
1，rm buffer
   产生的结果为去掉了所有buffer的网表，删除buffer后，buffer所在的wire命名为原先buffer输入端的名字。
2，完成行内排序，也就是单个器件的排序动作，例如：
   C_OAI22_X3      T16170  ( .A1(T1352_Y)   , .B0(T5307_Y)   , .B1(T9166_Y)   , .A0(T5335_Y)   , .Y(T16170_Y)   );
   排序后变为：
   KC_OAI22_X3     T16170  ( .Y(T16170_Y)   , .B1(T9166_Y)   , .B0(T5307_Y)   , .A0(T5335_Y)   , .A1(T1352_Y)   );
   完成行内排序的同时，还并行的完成以下几个处理动作：
   1，处理对称管脚顺序差异
   2，处理内嵌式INVERTER的拆分,例如
      KC_NOR3B_X1 T5611 ( .Y(T5611_Y), .B(T5588_Y), .A(T48_Q), .CN(T5189_Q));
      会被拆分为：
			KC_INV_W T5611_INV ( .Y(T5189_Q_W) , .A(T5189_Q) );
			KC_NOR3_W       T5611   ( .Y(T5611_Y)    , .CN(T5189_Q_W)   , .B(T5588_Y)    , .A(T48_Q)      );
   3，处理复杂CELL的拆分
   
遇到的问题：
1，BUF A有B无的问题：仍然通过rmbuf脚本处理
2，INV的问题，修改处理方案，遇到不一致的单元，就修改含有INV的一方，将基本单元替换为INV抽出独立的方式，从而和另一方匹配
3，其余不一致的所有单元，都按照把复杂单元拆分为基本单元，从而和另一方匹配的方式处理。
   可能遇到的困难：对称输入的管脚，如何确定顺序？


奇怪问题：
某一行tmp5.v里面还有，到tmp6.v里面没了
    原因： KC_INV_W T15788_INV2 ( .Y(T8895_Y_W) , .A(T8895_Y) );
           /*stage6*/  KC_AOI22BB_X1_W T15788  ( .Y(T15788_Y)   , .B1(T8859_Y)   , .B0N(T8899_Y_W), .A1(T8860_Y)   , .A0N(T8895_Y_W));
           .A0N(T8895_Y_W));  ***错了。！！应该为 .A0N(T8895_Y_W)    );
    第二种情况：
          好像和 if (Expanding_Pin_List[var5] == words[3][words[3].find('(')+1:words[3].find(')')]): 有关
          原来的写法：if (Expanding_Pin_List[var5] in words[3]):       可能不行？？？？
KC_AO2222_X1 等价于 KC_NAND2_X4 + 2 个 KC_AOI22_X2

				module KC_AO2222_X1 ( Y,D1,D0,C1,C0,B1,B0,A1,A0);
				    output Y;
				    assign Y =  ((A0 && A1) || (B0 && B1) || (C0 && C1) || (D0 && D1));
				    endmodule
				    
				/*stage2*/  KC_NAND2_X4     D15581  ( .Y(D15581_Y)   , .B(D15579_Y)   , .A(D15578_Y)   );
				            KC_AOI22_X2     D15579  ( .Y(D15579_Y)   , .B1(D15529_Y)  , .B0(D9553_Y)   , .A1(D15506_Y)  , .A0(D14314_Y)  );
				            KC_AOI22_X2     D15578  ( .Y(D15578_Y)   , .B1(D14750_Y)  , .B0(D15552_Y)  , .A1(D755_Y)    , .A0(D15416_Y)  );
				            
				module KC_NAND2_X4 ( Y,B,A);
				    output Y;
				    assign Y = ~ (A && B );
				    endmodule
				    
				module KC_AOI22_X2 ( Y,B1,B0,A1,A0);
				    output Y;
				    assign Y = ~( (A0 && A1) || (B0 && B1) );
				    endmodule
				    
				    
				    ~ (  ~( (A0 && A1) || (B0 && B1) ) &&  ~( (A0 && A1) || (B0 && B1) ) )
				    = ( (A0 && A1) || (B0 && B1) ) ||  ( (A0 && A1) || (B0 && B1) )
				    
    
等价性备忘：

    dxj                                             lyt
    
KC_CELL_X2 ( Y,C,B,A);     					<=异常排序=>     KC_DFFRNHQ_X3 ( Q,RN,CK,D);
KC_CELL_X1 ( Y,C,B,A);     					<=异常排序=>     KC_DFFSNHQ_X3 ( Q,RN,CK,D);
KC_TINV_X3 ( Y,OE,A);      					<==========>     KC_TLAT_X3 ( Q,G,D);
KC_TLATHQN_X1 ( QN,GN,D2,D1);      	<==========>     KC_TLAT_X1 ( Q,CK,B,A);
KC_TLATHQN_X1 ( QN,GN,D2,D1);      	<==========>     KC_DFFHQ_X2 ( Q,D2,D1,CK);
KC_OAI211_X1 ( Y,C1,C0,B,A);       	<==========>     KC_OAI112_X1 ( Y,C1,C0,B,A);
KC_OAI21BB_X1 ( Y,C,B,A);          	<=异常排序=>     KC_AO12B_X1 ( Y,C,A,B);
KC_DFFRNHQ_X3 ( Q,S0,RN,D,CK);     	<=异常排序=>     KC_DFFRNHQ_X4 ( Q,CK1,RN,D,CK);
KC_OAI31_X1 ( Y,B2,B1,B0,A);        <==========>     KC_OAI13_X1 ( Y,B2,B1,B0,A);
KC_OAI22BB_X1 ( Y,D,C,B,A);         <==========>     KC_AO22BB_X1 ( Y,D,C,B,A);
KC_MXI2_X10 ( Y,S0,B,AN);          	<=异常排序=>     KC_MXI2B_X4 ( Y,S0,A,BN);
KC_ADDF_X3 ( Co,Ci,B,A);            <==========>     KC_ADD_C_B_X1 ( Y,C,B,A);
KC_TINV_X1 ( Y,OE,A);               <==========>     KC_XOR2_X1 ( Y,B,A);
KC_AND2_X6 ( Y,B,A);                <==========>     KC_OR2_X4 ( Y,B,A);

D333(KC_AOI22_X5) 和 T11611(KC_AOI32_X1)， 端口数目不对应，但是因为 T11611 有两个输入端完全相同，所以有可能还是等价的

D10322（KC_MXI2_X1）和  T4702（KC_XNOR2_X8），是两种器件，但是因为有两个输入端完全相同，逻辑上确认是等价的



////////////////////////////////////////////////////
////////////////////////////////////////////////////
////////////////////////////////////////////////////
module KC_TLATHQN_X1 ( QN, D1,D2, GN );
always @ (posedge GN )
		Q_reg <= D1 || D2;
    assign #1 QN = GN & Q_reg;
endmodule

module KC_TLAT_X1 ( Q, A, B, CK );
always @ (posedge CK )
		Q_reg <= (A || B);
		assign #1 Q = CK & Q_reg;
endmodule
////////////////////////////////////////////////////
module KC_NOR2_X1 (A,B, Y);
input A,B;
output Y;

wire Y;
assign Y = ~ (A || B );

endmodule

////////////////////////////////////////////////////
module KC_OAI21_X2 (B0,B1,A,Y);
input B0,B1,A;
output Y;

wire Y;
assign Y = ~((B0 || B1) && A);

endmodule
////////////////////////////////////////////////////
/*stage11*/  KC_MXI2_X4       D16754    ( .Y(D16754_Y)    , .S0(D7761_Y)    , .B(D6305_Y)     , .A(D7761_Y)     );
/*stage11*/  KC_XNOR2_X4      T12461    ( .Y(T12461_Y)    , .B(T10638_Y)    , .A(T11397_Y)    );
D7761_Y 连接S0和A两个端口
Y = ~(B ? ~S0 : ((S0 ^ A) ? 1'bx : A ));
  = ~(B ? ~S0 : ((S0 ^ S0) ? 1'bx : S0 ));
  = ~(B ? ~S0 : (0 ? 1'bx : S0))
  = ~(B ? ~S0 : S0))
  = ~(B ^ S0)

module KC_MXI2_X4 ( Y,S0,B,A);
    output Y;
    assign Y = ~(B ? ~S0 : ((S0 ^ A) ? 1'bx : A ));
    endmodule
module KC_XNOR2_X4 ( Y,B,A);
    output Y;
    assign Y = ~(A ^ B) ;
    endmodule
    
////////////////////////////////////////////////////
module KC_TLATHQN_X1 ( QN,GN,D2,D1);
    output reg QN;
    reg Q_reg;
    always @ (posedge GN )
      Q_reg <= D1 || D2;
    assign #1 QN = GN & Q_reg;
    endmodule
module KC_DFFHQ_X2 ( Q,D2,D1,CK);
    output reg Q;
    reg Q_reg;
    always @ (posedge CK)
      Q_reg <= (D1 || D2);
    assign #1 Q = CK & Q_reg;
    endmodule
    
////////////////////////////////////////////////////
module KC_TINV_X1 ( Y,OE,A);
    output Y;
    assign Y = OE ? (~A) : A;
    endmodule
    oe a
    0 0  0
    0 1  1
    1 0  1
    1 1  0
module KC_XOR2_X1 ( Y,B,A);
    output Y;
    assign Y = (A ^ B );
    endmodule
////////////////////////////////////////////////////
module KC_ADDF_X3 ( Co,Ci,B,A);
    assign Co = A && B || (A || B) && Ci;
    endmodule
    
module KC_ADD_C_B_X1 ( Y,C,B,A);
    output Y;
    assign Y = (A && B) || (A && C) || (B && C);
    endmodule
////////////////////////////////////////////////////

module KC_MXI2_X10 ( Y,S0,B,AN);
    output Y;
    assign   Y = ~ (S0 ? B : ~(AN));
    endmodule
    
module KC_MXI2B_X4 ( Y,S0,BN,A);
    output Y;
    assign Y = ~(S0 ? A : ~BN);
    endmodule
    
////////////////////////////////////////////////////
module KC_OAI22BB_X1 ( Y,D,C,B,A);
    output Y;
    assign Y = ~(~(A && B) && (C || D));
    endmodule
    
module KC_AO22BB_X1 ( Y,D,C,B,A);
    output Y;
    assign Y =  (A && B) || (~C && ~D);
    endmodule

////////////////////////////////////////////////////
module KC_OAI31_X1 ( Y,B2,B1,B0,A);
    output Y;
    assign Y = ~((B0 || B1 || B2) && A);
    endmodule
    
module KC_OAI13_X1 ( Y,B2,B1,B0,A);
    output Y;
    assign Y = ~((B0 || B1 || B2) && A);
    endmodule
    
    


/////////////////////////////////
module KC_DFFRNHQ_X3 ( Q,S0,RN,D,CK);
    output reg Q;
    reg Q_reg;
    always @ (posedge CK or negedge RN)
    begin
     if (RN == 1'b0)
       Q_reg <= 1'b0;
     else if ( S0 == 1'b1)
       Q_reg <= D;
    end
    assign #1 Q = Q_reg;
    endmodule
    
module KC_DFFRNHQ_X4 ( Q,RN,D,CK1,CK);
    output reg Q;
    reg Q_reg;
    always@(posedge CK or negedge RN)
    begin
       if (RN == 1'b0)
          Q_reg <= 1'b0 ;
       else if (CK1)
          Q_reg <= D;
    end
    assign #1 Q = Q_reg;
    endmodule
///////////////////////////////////////////////
KC_OA21_X1      D14590  ( .Y(D14590_Y)   , .B(D14602_Y)   , .A1(D16769_Y)  , .A0(D14601_Q)  );
KC_NAND2_X1     D14602  ( .Y(D14602_Y)   , .B(D16769_Y)   , .A(D14601_Q)   );
KC_INV_X1 D14603 ( .Y(D14603_Y), .A(D14602_Y));

KC_OA21_X1      D13911  ( .Y(D13911_Y)   , .B(D13924_Y)   , .A1(D14603_Y)  , .A0(D608_Q)    );
KC_NAND2_X1     D13924  ( .Y(D13924_Y)   , .B(D14603_Y)   , .A(D608_Q)     );
KC_INV_X1 D13925 ( .Y(D13925_Y), .A(D13924_Y));

KC_OA21_X1      D13912  ( .Y(D13912_Y)   , .B(D13922_Y)   , .A1(D13925_Y)  , .A0(D14520_Q)  );
KC_NAND2_X1     D13922  ( .Y(D13922_Y)   , .B(D13925_Y)   , .A(D14520_Q)   );
KC_INV_X1 D13923 ( .Y(D13923_Y), .A(D13922_Y));




KC_ADDH_X1 T9141 ( .S(T9141_S), .Co(T9141_Co),     .B(T9047_Co), .A(T9469_Q));
KC_ADDH_X1 T9142 ( .S(T9142_S), .Co(T9142_Co),     .B(T9141_Co), .A(T5406_Q));
KC_ADDH_X1 T9159 ( .S(T9159_S), .Co(T9159_Co),     .B(T9142_Co), .A(T604_Q));


KC_OA21_X1      T9141_W1     ( .Y(T9141_S)   , .B(T16094L1)   , .A1(T9047_Co)   , .A0(T9469_Q)   );
KC_NAND2_X1     T9141_W2     ( .Y(T16094L1)   , .B(T9047_Co)   , .A(T9469_Q)   );
KC_INV_X1       T9141_W3     ( .Y(T9141_Co)   , .A(T16094L1)   );

KC_OA21_X1      T9142_W1     ( .Y(T9142_S)   , .B(T16094L1)   , .A1(T9141_Co)   , .A0(T5406_Q)   );
KC_NAND2_X1     T9142_W2     ( .Y(T16094L1)   , .B(T9141_Co)   , .A(T5406_Q)   );
KC_INV_X1       T9142_W3     ( .Y(T9142_Co)   , .A(T16094L1)   );

////////////////////////////////////////////////

module KC_ADDH_X1 ( S, Co, A, B );

  output S;
  output Co;
  input A;
  input B;

wire S, Co;

assign S = A ^ B; 

assign Co = (A && B);
endmodule
module KC_OA21_X1 ( Y,B,A1,A0);
    output Y;
    assign Y = (A0 || A1) && B;
    endmodule
/////////////////////////////////////////////////

module KC_MXI2_X1 ( Y,S0,BN,A);
    output Y;
    assign   Y = ~ (S0 ? ~BN : A);
    endmodule
    assign   Y = ~ (S0 ? ~BN : BN);
    
    S0 0 0 1 1
    BN 0 1 0 1
       0 1 1 0
    
module KC_XNOR2_X8 ( Y,B,A);
    output Y;
    assign Y = ~(A ^ B );
    endmodule
/////////////////////////////////////////////////////

module KC_OA21_X1 ( Y,B,A1,A0);
    output Y;
    assign Y = (A0 || A1) && B;
    endmodule
    
module KC_ADDH_X1 ( S,Co,B,A);
    output S;
    assign S = A ^ B; 
    assign Co = (A && B);
    endmodule

//////////////////////////////////////////////
module KC_OAI22_X2 ( Y,B1,B0,A1,A0);
    output Y;
    assign Y = ~( (A0 || A1) && (B0 || B1) );
    endmodule
    
module KC_OAI22_X3 ( Y,B1,B0,A1,A0);
    output Y;
    assign Y = ~( (A0 || A1) && (B0 || B1) );
    endmodule
//////////////////////////////////////////////


module KC_OAI21BB_X1 ( Y,C,B,A);
    output Y;
    assign Y = ~(~(A && B) && C);
    endmodule
    
module KC_AO12B_X1 ( Y,C,B,A);
    output Y;
    assign Y = A && B || (~C);
    endmodule
    
    A xor B xor C   A && B || (~C)
    0 0 0  0        
    0 0 1  1            
    0 1 0  1
    0 1 1  0
    1 0 0  1
    1 0 1  0
    1 1 0  0
    1 1 1  1
    
////////////////////////////////////////////

module KC_OAI211_X1 ( Y,C1,C0,B,A);
    output Y;
    assign Y = ~((C0 || C1) && B && A);
    endmodule
    
module KC_OAI112_X1 ( Y,C1,C0,B,A);
    output Y;
    assign Y = ~((C0 || C1) && B && A);
    endmodule
    
////////////////////////////////////////////////////

module KC_AOI211_X1 ( Y,C1,C0,B,A);
    output Y;
    assign Y = ~((C0 && C1) || B || A);
    endmodule
    
module KC_AOI112B_X1 ( Y,C1N,C0,B,A);
    output Y;
    assign Y = ~((C0 && ~C1N) || B || A);
    endmodule
    
//////////////////////////////////////////////////////
module KC_OAI21B_X1 ( Y, A0N, A1, B );

  input A1;
  input B;
  output Y;
  input A0N;

wire Y;

assign Y = ~((~A0N || A1) && B);
endmodule

module KC_NOR2_X1 (A,B, Y);
input A,B;
output Y;

wire Y;
assign Y = ~ (A || B );

endmodule

///////////////////////////////////
KC_MX2_X3
module KC_MX2_X3 (A,B,S0,Y);
input A, B,S0 ;
output Y ;
wire Y;
//assign   Y = S0 ? B : A;


assign Y = (S0 ^ A) ? (~B) : B;

endmodule

module KC_XNOR2_X3 ( Y, A, B );

  output Y;
  input A;
  input B;

wire Y;
assign Y = ~(A ^ B );

endmodule




KC_NAND2B_X1 D9176 ( .Y(D9176_Y), .AN(D9179_Y), .B(D9180_Y));    
KC_DFFSNHQ_X1 D414 ( .Q(D414_Q), .D(D9176_Y), .SN(D9271_Y),     .CK(D10107_QN));
KC_DFFRNHQ_X1 D10147 ( .Q(D10147_Q), .D(D9176_Y), .RN(D9271_Y),     .CK(D9212_QN));


KC_AOI32_X1 T12037 ( .B0(T4058_Y), .A0(T16106_Y), .A1(T4065_Y),     .Y(T12037_Y), .A2(T4046_Y), .B1(T4065_Y));
KC_DFFRNHQ_X2 T5543 ( .Q(T5543_Q), .D(T12037_Y), .RN(T4047_Y),     .CK(T3496_Y));
KC_TLAT_X1      T14963  ( .Q(T14963_Q)   , .CK(T15191_Q)  , .B(T15715_Y)   , .A(T12067_Y)   );
T2158_Y


KC_AO2222_X2 T7813 ( .Y(T7813_Y), .A0(T11184_Y), .A1(T8697_Y),     .B0(T11893_Y), .B1(T8741_Y), .C0(T9344_Y), .C1(T8740_Y),     .D0(T8143_Y), .D1(T8742_Y));
KC_DFFRNHQ_X3 T6423 ( .RN(T7675_Y), .Q(T6423_Q), .D(T7813_Y),     .CK(T4826_Y));
KC_AOI21_X1 T15724 ( .A0(T7813_Y), .Y(T15724_Y), .B(T13242_Y),     .A1(T6805_Y));
KC_AOI21_X1 T15730 ( .A0(T7813_Y), .Y(T15730_Y), .B(T13242_Y),     .A1(T9334_Y));
KC_AOI21_X1 T7451 ( .A0(T6804_Y), .Y(T7451_Y), .B(T13242_Y),     .A1(T7813_Y));
KC_AOI21_X1 T7444 ( .A0(T7813_Y), .Y(T7444_Y), .B(T13242_Y),     .A1(T12401_Y));
KC_DFFRNHQ_X2 T522 ( .Q(T522_Q), .D(T7813_Y), .RN(T15030_Y),     .CK(T503_Y));
KC_DFFRNHQ_X2 T9351 ( .Q(T9351_Q), .D(T7813_Y), .RN(T15029_Y),     .CK(T178_Y));
KC_DFFRNHQ_X2 T9339 ( .Q(T9339_Q), .D(T7813_Y), .RN(T14985_Y),     .CK(T510_Y));
KC_DFFRNHQ_X2 T5306 ( .Q(T5306_Q), .D(T7813_Y), .RN(T14985_Y),     .CK(T686_Y));

KC_NAND2_X6 D15683 ( .Y(D15683_Y), .B(D15686_Y), .A(D15682_Y));
KC_CELL_X2 D16302 ( .Y(D16302_Y), .A(D15683_Y), .B(D2586_Y),     .C(D15652_Y));
KC_DFFRNHQ_X1 D14874 ( .Q(D14874_Q), .D(D15683_Y), .RN(D15790_Y),     .CK(D14983_Y));
KC_DFFRNHQ_X1 D2641 ( .Q(D2641_Q), .D(D15683_Y), .RN(D2677_Y),     .CK(D16348_Y));
KC_DFFRNHQ_X1 D1054 ( .Q(D1054_Q), .D(D15683_Y), .RN(D14869_Y),     .CK(D14987_Y));
KC_DFFRNHQ_X1 D953 ( .Q(D953_Q), .D(D15683_Y), .RN(D14869_Y),     .CK(D14231_Y));
KC_AOI21_X1 D15776 ( .B0(D15683_Y), .Y(D15776_Y), .A(D14059_Y),     .B1(D14249_Y));
KC_AOI21_X1 D14227 ( .B0(D15683_Y), .Y(D14227_Y), .A(D14059_Y),     .B1(D14220_Y));
KC_AOI21_X1 D14226 ( .B0(D14248_Y), .Y(D14226_Y), .A(D14059_Y),     .B1(D15683_Y));
KC_AOI21_X1 D14225 ( .B0(D15683_Y), .Y(D14225_Y), .A(D14059_Y),     .B1(D14250_Y));
